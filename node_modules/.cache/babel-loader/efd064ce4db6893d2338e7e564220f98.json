{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\reactGame\\\\src\\\\components\\\\Match\\\\Match.js\",\n    _s = $RefreshSig$();\n\nimport { useRef } from 'react';\nimport Score from '../Score/Score';\nimport Hands from './Hands/Hands';\nimport Options from './Options/Options';\nimport './Match.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Match = ({\n  options,\n  matchRef,\n  playerHand,\n  computerHand,\n  optionsWrapper\n}) => {\n  _s();\n\n  let playerPoints = 0;\n  let computerPoints = 0;\n  const winner = useRef(null);\n  const playerScoreRef = useRef(null);\n  const computerScoreRef = useRef(null);\n  const computerOptions = ['rock', 'paper', 'scissors'];\n  const State = {\n    gamesCount: '',\n    playerScore: playerPoints,\n    computerScore: computerPoints,\n    winner: ''\n  };\n\n  const updateScore = () => {\n    playerScoreRef.current.textContent = playerPoints;\n    computerScoreRef.current.textContent = computerPoints;\n  };\n\n  const compareHands = (playerChoice, computerChoice) => {\n    if (playerChoice === 'rock') {\n      if (computerChoice === 'scissors') {\n        winner.current.textContent = 'Player win!';\n      } else if (computerChoice === 'paper') {\n        winner.current.textContent = 'Computer win!';\n      } else if (computerChoice === 'rock') {\n        winner.current.textContent = 'Draw game :(';\n      }\n    }\n\n    if (playerChoice === 'scissors') {\n      if (computerChoice === 'rock') {\n        winner.current.textContent = 'Computer win!';\n      } else if (computerChoice === 'paper') {\n        winner.current.textContent = 'Player win!';\n      } else if (computerChoice === 'scissors') {\n        winner.current.textContent = 'Draw game :(';\n      }\n    }\n\n    if (playerChoice === 'paper') {\n      if (computerChoice === 'rock') {\n        winner.current.textContent = 'Player win!';\n      } else if (computerChoice === 'paper') {\n        winner.current.textContent = 'Draw game :(';\n      } else if (computerChoice === 'scissors') {\n        winner.current.textContent = 'Computer win!';\n      }\n    }\n\n    if (winner.current.textContent === 'Player win!') {\n      playerPoints++;\n    } else if (winner.current.textContent === 'Computer win!') {\n      computerPoints++;\n    }\n\n    updateScore(playerPoints, computerPoints);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: matchRef,\n    className: \"match fadeOut\",\n    children: [/*#__PURE__*/_jsxDEV(Score, {\n      playerScoreRef: playerScoreRef,\n      computerScoreRef: computerScoreRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      ref: winner,\n      className: \"winner\",\n      children: \"Choose a tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hands, {\n      playerHand: playerHand,\n      computerHand: computerHand\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Options, {\n      options: options,\n      playerHand: playerHand,\n      computerHand: computerHand,\n      compareHands: compareHands,\n      optionsWrapper: optionsWrapper,\n      computerOptions: computerOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Match, \"1I0WjkF0ltWRQ0VqgLBic9Fc9Fo=\");\n\n_c = Match;\nexport default Match;\n\nvar _c;\n\n$RefreshReg$(_c, \"Match\");","map":{"version":3,"sources":["C:/Programming/reactGame/src/components/Match/Match.js"],"names":["useRef","Score","Hands","Options","Match","options","matchRef","playerHand","computerHand","optionsWrapper","playerPoints","computerPoints","winner","playerScoreRef","computerScoreRef","computerOptions","State","gamesCount","playerScore","computerScore","updateScore","current","textContent","compareHands","playerChoice","computerChoice"],"mappings":"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","sourcesContent":["import { useRef } from 'react';\r\n\r\nimport Score from '../Score/Score';\r\n\r\nimport Hands from './Hands/Hands';\r\nimport Options from './Options/Options';\r\n\r\nimport './Match.scss';\r\n\r\nconst Match = ({\r\n  options,\r\n  matchRef,\r\n  playerHand,\r\n  computerHand,\r\n  optionsWrapper,\r\n}) => {\r\n  let playerPoints = 0;\r\n  let computerPoints = 0;\r\n\r\n  const winner = useRef(null);\r\n  const playerScoreRef = useRef(null);\r\n  const computerScoreRef = useRef(null);\r\n\r\n  const computerOptions = ['rock', 'paper', 'scissors'];\r\n\r\n  const State = {\r\n    gamesCount: '',\r\n    playerScore: playerPoints,\r\n    computerScore: computerPoints,\r\n    winner: '',\r\n  };\r\n\r\n  const updateScore = () => {\r\n    playerScoreRef.current.textContent = playerPoints;\r\n    computerScoreRef.current.textContent = computerPoints;\r\n  };\r\n\r\n  const compareHands = (playerChoice, computerChoice) => {\r\n    if (playerChoice === 'rock') {\r\n      if (computerChoice === 'scissors') {\r\n        winner.current.textContent = 'Player win!';\r\n      } else if (computerChoice === 'paper') {\r\n        winner.current.textContent = 'Computer win!';\r\n      } else if (computerChoice === 'rock') {\r\n        winner.current.textContent = 'Draw game :(';\r\n      }\r\n    }\r\n\r\n    if (playerChoice === 'scissors') {\r\n      if (computerChoice === 'rock') {\r\n        winner.current.textContent = 'Computer win!';\r\n      } else if (computerChoice === 'paper') {\r\n        winner.current.textContent = 'Player win!';\r\n      } else if (computerChoice === 'scissors') {\r\n        winner.current.textContent = 'Draw game :(';\r\n      }\r\n    }\r\n\r\n    if (playerChoice === 'paper') {\r\n      if (computerChoice === 'rock') {\r\n        winner.current.textContent = 'Player win!';\r\n      } else if (computerChoice === 'paper') {\r\n        winner.current.textContent = 'Draw game :(';\r\n      } else if (computerChoice === 'scissors') {\r\n        winner.current.textContent = 'Computer win!';\r\n      }\r\n    }\r\n\r\n    if (winner.current.textContent === 'Player win!') {\r\n      playerPoints++;\r\n    } else if (winner.current.textContent === 'Computer win!') {\r\n      computerPoints++;\r\n    }\r\n\r\n    updateScore(playerPoints, computerPoints);\r\n  };\r\n\r\n  return (\r\n    <div ref={matchRef} className=\"match fadeOut\">\r\n      <Score\r\n        playerScoreRef={playerScoreRef}\r\n        computerScoreRef={computerScoreRef}\r\n      />\r\n      <h2 ref={winner} className=\"winner\">\r\n        Choose a tool\r\n      </h2>\r\n      <Hands playerHand={playerHand} computerHand={computerHand} />\r\n      <Options\r\n        options={options}\r\n        playerHand={playerHand}\r\n        computerHand={computerHand}\r\n        compareHands={compareHands}\r\n        optionsWrapper={optionsWrapper}\r\n        computerOptions={computerOptions}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Match;\r\n"]},"metadata":{},"sourceType":"module"}