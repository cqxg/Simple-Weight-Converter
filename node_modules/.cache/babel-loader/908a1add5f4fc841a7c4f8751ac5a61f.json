{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\reactGame\\\\src\\\\components\\\\Match\\\\Match.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport Score from '../Score/Score';\nimport Hands from './Hands/Hands';\nimport Options from './Options/Options';\nimport './Match.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Match = ({\n  options,\n  matchRef,\n  playerHand,\n  computerHand,\n  optionsWrapper\n}) => {\n  _s();\n\n  let playerPoints = 0;\n  let computerPoints = 0;\n  const winner = useRef(null);\n  const playerScoreRef = useRef(null);\n  const computerScoreRef = useRef(null);\n  const [state, setState] = useState({\n    winner: '',\n    gamesCount: '',\n    playerPoints: '',\n    computerPoints: ''\n  });\n  console.log(state);\n  const computerOptions = ['rock', 'paper', 'scissors'];\n\n  const compareHands = (playerChoice, computerChoice) => {\n    if (playerChoice === 'rock') {\n      if (computerChoice === 'scissors') {\n        winner.current.textContent = 'Player win!';\n      } else if (computerChoice === 'paper') {\n        winner.current.textContent = 'Computer win!';\n      } else if (computerChoice === 'rock') {\n        winner.current.textContent = 'Draw game :(';\n      }\n    }\n\n    if (playerChoice === 'scissors') {\n      if (computerChoice === 'rock') {\n        winner.current.textContent = 'Computer win!';\n      } else if (computerChoice === 'paper') {\n        winner.current.textContent = 'Player win!';\n      } else if (computerChoice === 'scissors') {\n        winner.current.textContent = 'Draw game :(';\n      }\n    }\n\n    if (playerChoice === 'paper') {\n      if (computerChoice === 'rock') {\n        winner.current.textContent = 'Player win!';\n      } else if (computerChoice === 'paper') {\n        winner.current.textContent = 'Draw game :(';\n      } else if (computerChoice === 'scissors') {\n        winner.current.textContent = 'Computer win!';\n      }\n    }\n\n    if (winner.current.textContent === 'Player win!') {\n      setState({ ...state,\n        playerPoints: playerPoints++\n      });\n    } else if (winner.current.textContent === 'Computer win!') {\n      setState({ ...state,\n        computerPoints: computerPoints++\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: matchRef,\n    className: \"match fadeOut\",\n    children: [/*#__PURE__*/_jsxDEV(Score, {\n      playerScoreRef: playerScoreRef,\n      computerScoreRef: computerScoreRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      ref: winner,\n      className: \"winner\",\n      children: \"Choose a tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hands, {\n      playerHand: playerHand,\n      computerHand: computerHand\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Options, {\n      options: options,\n      playerHand: playerHand,\n      computerHand: computerHand,\n      compareHands: compareHands,\n      gamesCount: state.gamesCount,\n      optionsWrapper: optionsWrapper,\n      computerOptions: computerOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Match, \"1WPxdpOJ5erdu1rHz6d5yHUllCQ=\");\n\n_c = Match;\nexport default Match;\n\nvar _c;\n\n$RefreshReg$(_c, \"Match\");","map":{"version":3,"sources":["C:/Programming/reactGame/src/components/Match/Match.js"],"names":["useRef","useState","Score","Hands","Options","Match","options","matchRef","playerHand","computerHand","optionsWrapper","playerPoints","computerPoints","winner","playerScoreRef","computerScoreRef","state","setState","gamesCount","console","log","computerOptions","compareHands","playerChoice","computerChoice","current","textContent"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react';\r\n\r\nimport Score from '../Score/Score';\r\n\r\nimport Hands from './Hands/Hands';\r\nimport Options from './Options/Options';\r\n\r\nimport './Match.scss';\r\n\r\nconst Match = ({\r\n  options,\r\n  matchRef,\r\n  playerHand,\r\n  computerHand,\r\n  optionsWrapper,\r\n}) => {\r\n  let playerPoints = 0;\r\n  let computerPoints = 0;\r\n\r\n  const winner = useRef(null);\r\n  const playerScoreRef = useRef(null);\r\n  const computerScoreRef = useRef(null);\r\n\r\n  const [state, setState] = useState({\r\n    winner: '',\r\n    gamesCount: '',\r\n    playerPoints: '',\r\n    computerPoints: '',\r\n  });\r\n\r\n  console.log(state);\r\n\r\n  const computerOptions = ['rock', 'paper', 'scissors'];\r\n\r\n  const compareHands = (playerChoice, computerChoice) => {\r\n    if (playerChoice === 'rock') {\r\n      if (computerChoice === 'scissors') {\r\n        winner.current.textContent = 'Player win!';\r\n      } else if (computerChoice === 'paper') {\r\n        winner.current.textContent = 'Computer win!';\r\n      } else if (computerChoice === 'rock') {\r\n        winner.current.textContent = 'Draw game :(';\r\n      }\r\n    }\r\n\r\n    if (playerChoice === 'scissors') {\r\n      if (computerChoice === 'rock') {\r\n        winner.current.textContent = 'Computer win!';\r\n      } else if (computerChoice === 'paper') {\r\n        winner.current.textContent = 'Player win!';\r\n      } else if (computerChoice === 'scissors') {\r\n        winner.current.textContent = 'Draw game :(';\r\n      }\r\n    }\r\n\r\n    if (playerChoice === 'paper') {\r\n      if (computerChoice === 'rock') {\r\n        winner.current.textContent = 'Player win!';\r\n      } else if (computerChoice === 'paper') {\r\n        winner.current.textContent = 'Draw game :(';\r\n      } else if (computerChoice === 'scissors') {\r\n        winner.current.textContent = 'Computer win!';\r\n      }\r\n    }\r\n\r\n    if (winner.current.textContent === 'Player win!') {\r\n      setState({ ...state, playerPoints: playerPoints++ });\r\n    } else if (winner.current.textContent === 'Computer win!') {\r\n      setState({ ...state, computerPoints: computerPoints++ });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div ref={matchRef} className=\"match fadeOut\">\r\n      <Score\r\n        playerScoreRef={playerScoreRef}\r\n        computerScoreRef={computerScoreRef}\r\n      />\r\n      <h2 ref={winner} className=\"winner\">\r\n        Choose a tool\r\n      </h2>\r\n      <Hands playerHand={playerHand} computerHand={computerHand} />\r\n      <Options\r\n        options={options}\r\n        playerHand={playerHand}\r\n        computerHand={computerHand}\r\n        compareHands={compareHands}\r\n        gamesCount={state.gamesCount}\r\n        optionsWrapper={optionsWrapper}\r\n        computerOptions={computerOptions}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Match;\r\n"]},"metadata":{},"sourceType":"module"}