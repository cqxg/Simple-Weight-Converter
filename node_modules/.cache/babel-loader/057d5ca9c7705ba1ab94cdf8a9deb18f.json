{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\reactGame\\\\src\\\\components\\\\Match\\\\Match.js\";\nimport { useRef } from 'react';\nimport Hands from './Hands/Hands';\nimport Options from './Options/Options';\nimport './Match.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Match = ({\n  options,\n  matchRef,\n  playerHand,\n  computerHand,\n  optionsWrapper,\n  computerOptions\n}) => {\n  const playMatch = () => {\n    console.log(playerHand);\n    console.log(computerHand);\n    playerHand.animationend(this.style.animation = '');\n    computerHand.animationend(this.style.animation = '');\n    options.forEach(option => {\n      option.addEventListener('click', function () {\n        optionsWrapper.current.classList.add('disabled');\n        const computerNumber = Math.floor(Math.random() * 3);\n        const computerChoise = computerOptions[computerNumber];\n        playerHand.src = `./assets/rock.png`;\n        computerHand.src = `./assets/rock.png`;\n        setTimeout(() => {\n          //   compareHands(this.className, computerChoise);\n          playerHand.src = `./assets/${this.className}.png`;\n          computerHand.src = `./assets/${computerChoise}.png`;\n          optionsWrapper.classList.remove('disabled');\n        }, 2000);\n        playerHand.style.animation = 'shakePlayer 2s ease';\n        computerHand.style.animation = 'shakeComputer 2s ease';\n      });\n    });\n  };\n\n  playMatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: matchRef,\n    className: \"match fadeOut\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"winner\",\n      children: \"Choose a tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hands, {\n      playerHand: playerHand,\n      computerHand: computerHand\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Options, {\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Match;\nexport default Match;\n\nvar _c;\n\n$RefreshReg$(_c, \"Match\");","map":{"version":3,"sources":["C:/Programming/reactGame/src/components/Match/Match.js"],"names":["useRef","Hands","Options","Match","options","matchRef","playerHand","computerHand","optionsWrapper","computerOptions","playMatch","console","log","animationend","style","animation","forEach","option","addEventListener","current","classList","add","computerNumber","Math","floor","random","computerChoise","src","setTimeout","className","remove"],"mappings":";AAAA,SAASA,MAAT,QAAuB,OAAvB;AAEA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,OAAO,aAAP;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AACbC,EAAAA,OADa;AAEbC,EAAAA,QAFa;AAGbC,EAAAA,UAHa;AAIbC,EAAAA,YAJa;AAKbC,EAAAA,cALa;AAMbC,EAAAA;AANa,CAAD,KAOR;AACJ,QAAMC,SAAS,GAAG,MAAM;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYN,UAAZ;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYL,YAAZ;AAEAD,IAAAA,UAAU,CAACO,YAAX,CAAyB,KAAKC,KAAL,CAAWC,SAAX,GAAuB,EAAhD;AACAR,IAAAA,YAAY,CAACM,YAAb,CAA2B,KAAKC,KAAL,CAAWC,SAAX,GAAuB,EAAlD;AAEAX,IAAAA,OAAO,CAACY,OAAR,CAAiBC,MAAD,IAAY;AAC1BA,MAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiC,YAAY;AAC3CV,QAAAA,cAAc,CAACW,OAAf,CAAuBC,SAAvB,CAAiCC,GAAjC,CAAqC,UAArC;AACA,cAAMC,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAvB;AACA,cAAMC,cAAc,GAAGjB,eAAe,CAACa,cAAD,CAAtC;AAEAhB,QAAAA,UAAU,CAACqB,GAAX,GAAkB,mBAAlB;AACApB,QAAAA,YAAY,CAACoB,GAAb,GAAoB,mBAApB;AAEAC,QAAAA,UAAU,CAAC,MAAM;AACf;AAEAtB,UAAAA,UAAU,CAACqB,GAAX,GAAkB,YAAW,KAAKE,SAAU,MAA5C;AACAtB,UAAAA,YAAY,CAACoB,GAAb,GAAoB,YAAWD,cAAe,MAA9C;AAEAlB,UAAAA,cAAc,CAACY,SAAf,CAAyBU,MAAzB,CAAgC,UAAhC;AACD,SAPS,EAOP,IAPO,CAAV;AASAxB,QAAAA,UAAU,CAACQ,KAAX,CAAiBC,SAAjB,GAA6B,qBAA7B;AACAR,QAAAA,YAAY,CAACO,KAAb,CAAmBC,SAAnB,GAA+B,uBAA/B;AACD,OAnBD;AAoBD,KArBD;AAsBD,GA7BD;;AA+BAL,EAAAA,SAAS;AAET,sBACE;AAAK,IAAA,GAAG,EAAEL,QAAV;AAAoB,IAAA,SAAS,EAAC,eAA9B;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,UAAU,EAAEC,UAAnB;AAA+B,MAAA,YAAY,EAAEC;AAA7C;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEH;AAAlB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAhDD;;KAAMD,K;AAkDN,eAAeA,KAAf","sourcesContent":["import { useRef } from 'react';\r\n\r\nimport Hands from './Hands/Hands';\r\nimport Options from './Options/Options';\r\n\r\nimport './Match.css';\r\n\r\nconst Match = ({\r\n  options,\r\n  matchRef,\r\n  playerHand,\r\n  computerHand,\r\n  optionsWrapper,\r\n  computerOptions,\r\n}) => {\r\n  const playMatch = () => {\r\n    console.log(playerHand);\r\n    console.log(computerHand);\r\n\r\n    playerHand.animationend((this.style.animation = ''));\r\n    computerHand.animationend((this.style.animation = ''));\r\n\r\n    options.forEach((option) => {\r\n      option.addEventListener('click', function () {\r\n        optionsWrapper.current.classList.add('disabled');\r\n        const computerNumber = Math.floor(Math.random() * 3);\r\n        const computerChoise = computerOptions[computerNumber];\r\n\r\n        playerHand.src = `./assets/rock.png`;\r\n        computerHand.src = `./assets/rock.png`;\r\n\r\n        setTimeout(() => {\r\n          //   compareHands(this.className, computerChoise);\r\n\r\n          playerHand.src = `./assets/${this.className}.png`;\r\n          computerHand.src = `./assets/${computerChoise}.png`;\r\n\r\n          optionsWrapper.classList.remove('disabled');\r\n        }, 2000);\r\n\r\n        playerHand.style.animation = 'shakePlayer 2s ease';\r\n        computerHand.style.animation = 'shakeComputer 2s ease';\r\n      });\r\n    });\r\n  };\r\n\r\n  playMatch();\r\n\r\n  return (\r\n    <div ref={matchRef} className=\"match fadeOut\">\r\n      <h2 className=\"winner\">Choose a tool</h2>\r\n      <Hands playerHand={playerHand} computerHand={computerHand} />\r\n      <Options options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Match;\r\n"]},"metadata":{},"sourceType":"module"}