{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\reactGame\\\\src\\\\components\\\\Match\\\\Match.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, useEffect } from 'react';\nimport Score from '../Score/Score';\nimport Hands from './Hands/Hands';\nimport Options from './Options/Options';\nimport './Match.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Match = ({\n  options,\n  matchRef,\n  playerHand,\n  computerHand,\n  optionsWrapper\n}) => {\n  _s();\n\n  const winner = useRef(null);\n  const stats = [];\n  const [state, setState] = useState({\n    winner: '',\n    gamesCount: '',\n    playerPoints: 0,\n    computerPoints: 0\n  });\n  useEffect(() => stats.push({\n    state\n  }), [state]);\n  console.log(stats);\n  const computerOptions = ['rock', 'paper', 'scissors'];\n\n  const compareHands = (playerChoice, computerChoice) => {\n    if (playerChoice === 'rock') {\n      if (computerChoice === 'scissors') {\n        winner.current.textContent = 'Player win!';\n      } else if (computerChoice === 'paper') {\n        winner.current.textContent = 'Computer win!';\n      } else if (computerChoice === 'rock') {\n        winner.current.textContent = 'Draw game :(';\n      }\n    }\n\n    if (playerChoice === 'scissors') {\n      if (computerChoice === 'rock') {\n        winner.current.textContent = 'Computer win!';\n      } else if (computerChoice === 'paper') {\n        winner.current.textContent = 'Player win!';\n      } else if (computerChoice === 'scissors') {\n        winner.current.textContent = 'Draw game :(';\n      }\n    }\n\n    if (playerChoice === 'paper') {\n      if (computerChoice === 'rock') {\n        winner.current.textContent = 'Player win!';\n      } else if (computerChoice === 'paper') {\n        winner.current.textContent = 'Draw game :(';\n      } else if (computerChoice === 'scissors') {\n        winner.current.textContent = 'Computer win!';\n      }\n    }\n\n    if (winner.current.textContent === 'Player win!') {\n      setState({ ...state,\n        winner: 'player',\n        playerPoints: state.playerPoints + 1\n      });\n    } else if (winner.current.textContent === 'Computer win!') {\n      setState({ ...state,\n        winner: 'computer',\n        computerPoints: state.computerPoints + 1\n      });\n    } else if (winner.current.textContent === 'Draw game :(') {\n      setState({ ...state,\n        winner: 'draw'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: matchRef,\n    className: \"match fadeOut\",\n    children: [/*#__PURE__*/_jsxDEV(Score, {\n      playerPoints: state.playerPoints,\n      computerPoints: state.computerPoints\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      ref: winner,\n      className: \"winner\",\n      children: \"Choose a tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hands, {\n      playerHand: playerHand,\n      computerHand: computerHand\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Options, {\n      options: options,\n      playerHand: playerHand,\n      computerHand: computerHand,\n      compareHands: compareHands,\n      gamesCount: state.gamesCount,\n      optionsWrapper: optionsWrapper,\n      computerOptions: computerOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Match, \"SCo7HCPLsUqh0xc+MeY5bBzOShU=\");\n\n_c = Match;\nexport default Match;\n\nvar _c;\n\n$RefreshReg$(_c, \"Match\");","map":{"version":3,"sources":["C:/Programming/reactGame/src/components/Match/Match.js"],"names":["useRef","useState","useEffect","Score","Hands","Options","Match","options","matchRef","playerHand","computerHand","optionsWrapper","winner","stats","state","setState","gamesCount","playerPoints","computerPoints","push","console","log","computerOptions","compareHands","playerChoice","computerChoice","current","textContent"],"mappings":"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","sourcesContent":["import { useRef, useState, useEffect } from 'react';\r\n\r\nimport Score from '../Score/Score';\r\n\r\nimport Hands from './Hands/Hands';\r\nimport Options from './Options/Options';\r\n\r\nimport './Match.scss';\r\n\r\nconst Match = ({\r\n  options,\r\n  matchRef,\r\n  playerHand,\r\n  computerHand,\r\n  optionsWrapper,\r\n}) => {\r\n  const winner = useRef(null);\r\n\r\n  const stats = [];\r\n\r\n  const [state, setState] = useState({\r\n    winner: '',\r\n    gamesCount: '',\r\n    playerPoints: 0,\r\n    computerPoints: 0,\r\n  });\r\n\r\n  useEffect(() => stats.push({state}), [state]);\r\n\r\n  console.log(stats)\r\n  const computerOptions = ['rock', 'paper', 'scissors'];\r\n\r\n  const compareHands = (playerChoice, computerChoice) => {\r\n    if (playerChoice === 'rock') {\r\n      if (computerChoice === 'scissors') {\r\n        winner.current.textContent = 'Player win!';\r\n      } else if (computerChoice === 'paper') {\r\n        winner.current.textContent = 'Computer win!';\r\n      } else if (computerChoice === 'rock') {\r\n        winner.current.textContent = 'Draw game :(';\r\n      }\r\n    }\r\n\r\n    if (playerChoice === 'scissors') {\r\n      if (computerChoice === 'rock') {\r\n        winner.current.textContent = 'Computer win!';\r\n      } else if (computerChoice === 'paper') {\r\n        winner.current.textContent = 'Player win!';\r\n      } else if (computerChoice === 'scissors') {\r\n        winner.current.textContent = 'Draw game :(';\r\n      }\r\n    }\r\n\r\n    if (playerChoice === 'paper') {\r\n      if (computerChoice === 'rock') {\r\n        winner.current.textContent = 'Player win!';\r\n      } else if (computerChoice === 'paper') {\r\n        winner.current.textContent = 'Draw game :(';\r\n      } else if (computerChoice === 'scissors') {\r\n        winner.current.textContent = 'Computer win!';\r\n      }\r\n    }\r\n\r\n    if (winner.current.textContent === 'Player win!') {\r\n      setState({\r\n        ...state,\r\n        winner: 'player',\r\n        playerPoints: state.playerPoints + 1,\r\n      });\r\n    } else if (winner.current.textContent === 'Computer win!') {\r\n      setState({\r\n        ...state,\r\n        winner: 'computer',\r\n        computerPoints: state.computerPoints + 1,\r\n      });\r\n    } else if (winner.current.textContent === 'Draw game :(') {\r\n      setState({\r\n        ...state,\r\n        winner: 'draw',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div ref={matchRef} className=\"match fadeOut\">\r\n      <Score\r\n        playerPoints={state.playerPoints}\r\n        computerPoints={state.computerPoints}\r\n      />\r\n      <h2 ref={winner} className=\"winner\">\r\n        Choose a tool\r\n      </h2>\r\n      <Hands playerHand={playerHand} computerHand={computerHand} />\r\n      <Options\r\n        options={options}\r\n        playerHand={playerHand}\r\n        computerHand={computerHand}\r\n        compareHands={compareHands}\r\n        gamesCount={state.gamesCount}\r\n        optionsWrapper={optionsWrapper}\r\n        computerOptions={computerOptions}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Match;\r\n"]},"metadata":{},"sourceType":"module"}